import org.springframework.boot.gradle.tasks.run.BootRun

plugins {
    id 'application'
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example.volunteer_platform'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.hibernate:hibernate-core:6.2.10.Final'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'

    implementation 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'mysql:mysql-connector-java:8.0.33'
}

tasks.named('test') {
    enabled = false
}

application {
    mainClass = 'com.example.volunteer_platform.server.VolunteerPlatformApplication'
}

tasks.register('bootRunServer', BootRun) {
    group = 'application'
    description = 'Run the server application'
    mainClass.set('com.example.volunteer_platform.server.VolunteerPlatformApplication')

    classpath = sourceSets.main.runtimeClasspath
    args = ['--spring.config.location=src/main/resources/server/application.properties']
}

tasks.register('bootRunClient', BootRun) {
    group = 'application'
    description = 'Run the client application'
    mainClass.set('com.example.volunteer_platform.client.ClientApplication')

    classpath = sourceSets.main.runtimeClasspath
    args = ['--spring.config.location=src/main/resources/client/application.properties']

    standardInput = System.in
}


